// server/googleDrive.js
import express from "express";
import fetch from "node-fetch";

const router = express.Router();

// === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (subscriptions.json) ===
router.post("/save", async (req, res) => {
  const { access_token, data } = req.body;
  if (!access_token || !data) {
    console.log("‚ùå /drive/save ‚Äî –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö");
    return res.status(400).json({ error: "Missing data" });
  }

  console.log("‚ö° /drive/save ‚Äî –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö");

  try {
    const metadata = {
      name: "subscriptions.json",
      mimeType: "application/json",
    };

    const form = new FormData();
    form.append(
      "metadata",
      new Blob([JSON.stringify(metadata)], { type: "application/json" })
    );
    form.append(
      "file",
      new Blob([JSON.stringify(data)], { type: "application/json" })
    );

    const upload = await fetch(
      "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart",
      {
        method: "POST",
        headers: { Authorization: `Bearer ${access_token}` },
        body: form,
      }
    );

    const result = await upload.json();
    console.log("‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ Drive:", result);

    res.json(result);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Drive:", err.message);
    res.status(500).json({ error: err.message });
  }
});

// === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Drive ===
router.post("/load", async (req, res) => {
  const { access_token } = req.body;
  if (!access_token) {
    console.log("‚ùå /drive/load ‚Äî –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞");
    return res.status(400).json({ error: "Missing token" });
  }

  console.log("‚ö° /drive/load ‚Äî –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö");

  try {
    const filesResp = await fetch(
      "https://www.googleapis.com/drive/v3/files?q=name='subscriptions.json'&fields=files(id)",
      { headers: { Authorization: `Bearer ${access_token}` } }
    );
    const files = await filesResp.json();
    console.log("üîç –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã:", files);

    if (!files.files.length) {
      console.log("‚ÑπÔ∏è –§–∞–π–ª subscriptions.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Google Drive");
      return res.json({ data: null });
    }

    const fileId = files.files[0].id;
    const contentResp = await fetch(
      `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media`,
      { headers: { Authorization: `Bearer ${access_token}` } }
    );
    const data = await contentResp.json();

    console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Drive:", data);
    res.json({ data });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑ Drive:", err.message);
    res.status(500).json({ error: err.message });
  }
});

export default router;
